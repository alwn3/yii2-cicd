name: Deploy to EC2
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: alwn3/yii2-app
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: docker/Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            SERVICE_NAME=yii2_app
            IMAGE=${{ env.IMAGE_NAME }}:latest

            echo "Checking if Docker service $SERVICE_NAME exists..."
            if docker service ls --filter name=$SERVICE_NAME --format '{{.Name}}' | grep -q $SERVICE_NAME; then
              echo "Service exists. Updating with new image..."
              docker service update --image $IMAGE --force $SERVICE_NAME
            else
              echo "Service does not exist. Creating it..."
              docker service create --name $SERVICE_NAME --publish 8080:80 $IMAGE
            fi
